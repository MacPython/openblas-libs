env:
    global:
        # The archive that gets built has name from ``git describe`` on this
        # commit.
        - BUILD_COMMIT=79fd006c5
        - REPO_DIR=OpenBLAS
        # Following generated with:
        # travis encrypt -r MacPython/openblas-libs OPENBLAS_LIBS_STAGING_UPLOAD_TOKEN=<secret token value>
        # The value of the existing token can be retrieved at the bottom of the page at:
        #   https://anaconda.org/multibuild-wheels-staging/settings/access:
        # To generate a new token, we need the permissions:
        # - "Allow write access to the API site"
        # - "Allow uploads to PyPI repositories"
        - secure: "vxMRXsnSBczv/u4HF0LT2U/f5wdTosSWmORwcNv8A/46uFK5CExbVj/LqW0e4fnrv2EZX2sDokrC/3nZAvlxRiZSkJ6dR34lU7ysPheD1sTdpVnKFrajcu22gmMmrORQf/v0ntkFYQj/+zRqVGb8QJLxW9bj8mEoWH4vkmnIHyRNuuIeLQrlbU3PeXusQ1/XoCrmlsU9kg8pyTwzfpG00T7BkACbZBYhRK84LCB4pIYgxxWgMKXH8DSqVxsK9egYXZM58YQwIOJGwpqw5XyYH+aKjZqSz1opNbzClWwT3hgAveVgQ7t2rZ8YZ0I6GyphLQ9JId/Vmuza0TjwzlCcexNSsAfolbqiCcwBElNBDpUzNB4bRzyGc3vckE/C+PlDoRL1be0UHoEnyzmIzwhwVrZKOyz7pGkbdtjOoqB5VgoMy04Tnd2l4mkJkx5ub3v7Z0Q74LWKKaZJcXBVIATIjZu43jI9Y9HYV8Ey0CcZY33EjwpOe7wSVgiSDcTv1KUS1tJwZpHX+duJSYMQyWRhkTxKtt8E1FosNQ1fRZMFmY74mAdVPIv9Vn1qgSnOCSkNGlLBIjVCozie0HVlzUk1FhvLtral3b/hp7+6JVjU1sp7HnaS/DtHTq57kceEbT56GxbQopye1zvecnhUp9tohLFeSzk/zJcvXGTIMrJlWnU="
        # > 10.6 needed for OpenBLAS 0.3.1 to avoid thread-local storage error
        # in memory.c
        - MACOSX_DEPLOYMENT_TARGET=10.9

language: python
dist: xenial
os: linux
services: docker

jobs:
  include:
    - os: linux
      env:
        - PLAT=x86_64
    - os: linux
      env:
        - PLAT=i686
    - os: osx
      language: objective-c
      env:
        - PLAT=x86_64
    - os: osx
      language: objective-c
      env:
        - PLAT=i686
    - os: linux
      env:
        - PLAT=x86_64
        - INTERFACE64=1
    - os: osx
      language: objective-c
      env:
        - PLAT=x86_64
        - INTERFACE64=1
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: s390x
      env:
        - PLAT=s390x
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: s390x
      env:
        - PLAT=s390x
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: ppc64le
      env:
        - PLAT=ppc64le
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: ppc64le
      env:
        - PLAT=ppc64le
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    # linux manylinux2010
    - os: linux
      env:
        - PLAT=x86_64
        - MB_ML_VER=2010
    - os: linux
      env:
        - PLAT=i686
        - MB_ML_VER=2010
    - os: linux
      env:
        - PLAT=x86_64
        - INTERFACE64=1
        - MB_ML_VER=2010

before_install:
    - source travis-ci/build_steps.sh
    - before_build

install:
    # get a clean checkout
    - clean_code $REPO_DIR $BUILD_COMMIT

script:
    # Build library and collect into libs subdirectory
    - build_lib "$PLAT" "$INTERFACE64"

after_success:
    # Upload libraries to the shared staging area on anaconda.org
    # Note that the anaconda-client package on PyPI is too old. Install from github
    # tag instead:
    - pip install -q git+https://github.com/Anaconda-Platform/anaconda-client@1.7.2
    - upload_to_anaconda
