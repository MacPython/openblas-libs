env:
    global:
        # The archive that gets built has name from ``git describe`` on this
        # commit.
        - OPENBLAS_COMMIT="v0.3.26"
        - REPO_DIR=OpenBLAS

language: python
sudo: required
dist: bionic
services: docker

matrix:
  include:
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=_1_1
        - MB_ML_LIBC=musllinux
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - INTERFACE64=1
        - MB_ML_VER=_1_1
        - MB_ML_LIBC=musllinux
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - PLAT=aarch64
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: s390x
      env:
        - PLAT=s390x
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: s390x
      env:
        - PLAT=s390x
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: ppc64le
      env:
        - PLAT=ppc64le
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: ppc64le
      env:
        - PLAT=ppc64le
        - INTERFACE64=1
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}

before_install:
    - source tools/build_steps.sh
    - before_build

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $OPENBLAS_COMMIT

script:
    # Build library and collect into libs subdirectory
    - build_lib "$PLAT" "$INTERFACE64"
    - libc=${MB_ML_LIBC:-manylinux}
    - docker_image=quay.io/pypa/${libc}${MB_ML_VER}_${PLAT}
    - docker run --rm -e INTERFACE64="${INTERFACE64}" \
        -e MB_ML_LIBC="${MB_ML_LIBC}" \
        -v $(pwd):/openblas $docker_image \
        /bin/bash -xe /openblas/tools/build_wheel.sh

after_success:
    - set +ex
    - sudo chmod -R a+w /home/travis/.cache
    - pip install -q git+https://github.com/Anaconda-Platform/anaconda-client@1.8.0
    # Upload libraries to the shared staging area on anaconda.org
    - sudo chmod -R a+w dist
    - source tools/upload_to_anaconda_staging.sh
    - upload_wheels
