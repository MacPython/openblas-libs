name: Win

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: null

env:
  OPENBLAS_COMMIT: "v0.3.26"
  OPENBLAS_ROOT: "c:\\opt"
  # Preserve working directory for calls into bash
  # Without this, invoking bash will cd to the home directory
  CHERE_INVOKING: "yes"
  BASH_PATH: "c:\\rtools40\\usr\\bin\\bash.exe"

jobs:
  build:
    strategy:
      matrix:
        plat: ['x64', 'x86']
        INTERFACE64: ['1', '0']
        os: [windows-latest]
        exclude:
          - plat: x86
            INTERFACE64: '1'
      fail-fast: false
    runs-on: ${{ matrix.os }}

    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v4.1.1
    - name: install-rtools
      run: |
        # rtools 42+ does not support 32 bits builds.
        choco install -y rtools --no-progress --force --version=4.0.0.20220206

    - name: Set env variables
      run: |
        echo "START_DIR=$PWD" >> $env:GITHUB_ENV
        # For interpretation of MSYSTEM, see:
        # https://sourceforge.net/p/msys2/discussion/general/thread/b7dfdac8/#3939
        if ( "${{ matrix.plat }}" -eq "x86") {
          echo "PLAT=i686" >> $env:GITHUB_ENV
          echo "WHEEL_PLAT=win32" >> $env:GITHUB_ENV
          echo "MSYSTEM=MINGW32" >> $env:GITHUB_ENV
          echo "LDFLAGS=-static -static-libgcc" >> $env:GITHUB_ENV
          echo "BUILD_BITS=32" >> $env:GITHUB_ENV
        } else {
          echo "PLAT=x86_64" >> $env:GITHUB_ENV
          echo "WHEEL_PLAT=win_amd64" >> $env:GITHUB_ENV
          echo "MSYSTEM=UCRT64" >> $env:GITHUB_ENV
          echo "LDFLAGS=-lucrt -static -static-libgcc" >> $env:GITHUB_ENV
          echo "BUILD_BITS=64" >> $env:GITHUB_ENV
        }
        if ( ${{ matrix.INTERFACE64 }} -eq "1" ) {
          echo "INTERFACE64=1" >> $env:GITHUB_ENV
        }
        $CIBW = "${{ github.workspace }}/.openblas"
        $CIBW = $CIBW.replace("\","/")
        echo "CIBW_ENVIRONMENT_WINDOWS=PKG_CONFIG_PATH=$CIBW" >> $env:GITHUB_ENV

    - name: Debug
      run: |
        echo CIBW_ENVIRONMENT_WINDOWS=$env:CIBW_ENVIRONMENT_WINDOWS

    - name: Build
      run: |
        git submodule update --init --recursive
        & $env:BASH_PATH -lc tools/build_openblas.sh

    - name: Test
      run: |
        & $env:BASH_PATH -lc tools/build_gfortran.sh
        echo "Static test"
        .\for_test\test.exe
        echo "Dynamic test"
        .\for_test\test_dyn.exe

    - name: Copy
      run: |
        cp for_test\test*.exe libs

    - uses: actions/upload-artifact@v4.3.0
      with:
        name: openblas-${{matrix.plat }}-${{ matrix.INTERFACE64 }}
        path: libs/openblas*.ziplibs

    - uses: conda-incubator/setup-miniconda@v3.0.1
      with:
        activate-environment: upload

    - name: Upload
      # see https://github.com/marketplace/actions/setup-miniconda for why
      # `-el {0}` is required.
      shell: bash -el {0}
      env:
       MULTIBUILD_WHEELS_STAGING_ACCESS: ${{ secrets.MULTIBUILD_WHEELS_STAGING_ACCESS }}
      run: |
        # Pin urllib3<2 due to github.com/Anaconda-Platform/anaconda-client/issues/654
        conda install -y anaconda-client 'urllib3<2.0.0'
        source tools/upload_to_anaconda_staging.sh
        upload_wheels
